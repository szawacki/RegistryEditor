<Window x:Class="RegEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RegEditor"
        Title="RegEditor" Height="870" Width="1519" Loaded="Window_Loaded" AllowDrop="True">
    <!--http://connect.microsoft.com/VisualStudio/feedback/details/632407/wpf-designer-fails-when-self-referencing-project-assembly-in-xaml-in-64-bit-app-with-visual-studio-2010-->
    <Window.Resources>
        <Style x:Key="CircleButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-2,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="content" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="0.4" X="0.4"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="0.5" X="0.4"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" Value="#70b7f4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border Name="Border" Margin="0,0,0,-1" Background="#FFF9F9F9"
                                    BorderBrush="#FF8C8E94" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                                    HorizontalAlignment="Stretch" ContentSource="Header" Margin="12,2,12,2"
                                                    RecognizesAccessKey="True">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#683797CD" Offset="0.503" />
                                            <GradientStop Color="#49A6D5FE" Offset="0.192" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Border" Property="Height" Value="18" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Name="grid_BG" Background="#1FB7DDFF" AllowDrop="True"  Drop="grid_BG_Drop" IsHitTestVisible="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="*" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" Name="grid_tab_splitter" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Name="c1" Width="*" />
                <ColumnDefinition Name="c2" Width="0" />
                <ColumnDefinition Name="c3" Width="0" />
            </Grid.ColumnDefinitions>
            <TabControl Grid.Column="0" Name="tabcontrol" MouseMove="tabcontrol_MouseMove" PreviewMouseLeftButtonDown="tabcontrol_PreviewMouseLeftButtonDown" Drop="tabcontrol_Drop" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" AllowDrop="True" GotFocus="tabcontrol_GotFocus" />
            <GridSplitter Grid.Column="1" Name="grid_Content_Splitter" HorizontalAlignment="Center" Height="Auto" VerticalAlignment="Stretch" Width="2" Background="#1FB7DDFF" />
            <TabControl Grid.Column="2" Name="tabcontrol1" MouseMove="tabcontrol_MouseMove" PreviewMouseLeftButtonDown="tabcontrol_PreviewMouseLeftButtonDown" Drop="tabcontrol_Drop" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" AllowDrop="True" GotFocus="tabcontrol_GotFocus">
                <TabControl.Resources>
                    <!--http://www.codeproject.com/Articles/493538/Add-Remove-Tabs-Dynamically-in-WPF-->
                    <DataTemplate x:Key="TabHeader" DataType="TabItem">
                        <DockPanel Focusable="False">
                            <Button Name="btnDelete" DockPanel.Dock="Right" Margin="5,1,0,0" Style="{StaticResource CircleButton}" Width="13" Height="13" Click="btnDelete_Click">
                            <!--<Button Name="btnDelete" BorderBrush="Transparent" DockPanel.Dock="Right" Margin="5,3,0,0" Background="Transparent" Width="12" Height="12" Padding="0" Click="btnDelete_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Name}">-->
                                <TextBlock Text="x" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="11" FontWeight="Bold"  />
                            <!--</Button>-->
                            </Button>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Header}" />
                        </DockPanel>
                    </DataTemplate>

                    <Style TargetType="TextBox">
                        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
                        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                        <Setter Property="AcceptsReturn" Value="True"></Setter>
                        <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
                        <Setter Property="MaxLines" Value="5000"></Setter>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"></Setter>
                    </Style>
                </TabControl.Resources>
            </TabControl>
        </Grid>
        <ToolBar Name="toolbar_1" Height="24" HorizontalAlignment="Stretch" VerticalAlignment="Top" OverridesDefaultStyle="False" IsManipulationEnabled="False" Margin="-9,0,-22,0">
            <ToolBar.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#683797CD" Offset="0.503" />
                    <GradientStop Color="#49A6D5FE" Offset="0.192" />
                </LinearGradientBrush>
            </ToolBar.Background>
            <!--<Button Content="Add Tab" Name="btn_Add" Width="60" Height="18" Click="btn_Add_Click" Padding="0" />-->
            <Button  Name="btn_Connect" Width="70" Height="18" Click="btn_Connect_Click" Padding="0" >
                <StackPanel Orientation="Horizontal">
                    <Image Source="Images/computer.png"></Image>
                    <TextBlock Padding="4,0,4,0">Connect</TextBlock>
                </StackPanel>
            </Button>
            <TextBox Name="Textbox1" Width="100" Height="18" KeyUp="Textbox1_KeyUp" FontSize="11">
                <TextBox.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF3F3F3F" Offset="0" />
                        <GradientStop Color="#FFA3A3A3" Offset="0.782" />
                    </LinearGradientBrush>
                </TextBox.BorderBrush>
            </TextBox>
            <Button Name="btn_dual" Width="90" Height="18" Click="btn_dual_Click" Padding="0" >
                <StackPanel Orientation="Horizontal">
                    <Image Name="view_image" Source="Images/application_tile_horizontal.png"></Image>
                    <TextBlock Name="view_btnText" Padding="4,0,4,0">Dual view</TextBlock>
                </StackPanel>
            </Button>
            <Menu Background="{x:Null}">
                <MenuItem Name="menu_fav" Header="Favorites" Padding="0,0,5,2">
                    <MenuItem.Icon>
                        <Image Source="/RegEditor;component/Images/star.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </Menu>
        </ToolBar>
        <StatusBar Grid.Row="2" Name="statusbar_1" HorizontalAlignment="Stretch" Height="20" VerticalAlignment="Top" Width="Auto" Background="#1FB7DDFF">
            <Label Name="label_Statusbar" Content="" VerticalAlignment="Center" Height="20" FontSize="11"></Label>
        </StatusBar>
    </Grid>
</Window>
